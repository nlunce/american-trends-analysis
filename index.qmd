---
title: "Causation or Correlation?"
subtitle: "Key Trends and Events Impacting American Life Over the Years"
author: "Nathan Lunceford"
execute:
  enabled: true
---

```{python}
#| label: libraries
#| include: false

import polars as pl
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.ticker import FuncFormatter
import seaborn as sns
```

# **CASUALTIES OF ARMED CONFLICTS**
---

```{python}
#| label: graph
#| code-summary: "Show Code"

african_countries = [
    "Algeria", "Angola", "Benin", "Botswana", "Burkina Faso", "Burundi", "Cameroon", "Cape Verde",
    "Central African Republic", "Chad", "Comoros", "Congo", "Djibouti", "Egypt", "Equatorial Guinea",
    "Eritrea", "Eswatini", "Ethiopia", "Gabon", "Gambia", "Ghana", "Guinea", "Guinea-Bissau",
    "Ivory Coast", "Kenya", "Lesotho", "Liberia", "Libya", "Madagascar", "Malawi", "Mali",
    "Mauritania", "Mauritius", "Morocco", "Mozambique", "Namibia", "Niger", "Nigeria", "Rwanda",
    "Sao Tome and Principe", "Senegal", "Seychelles", "Sierra Leone", "Somalia", "South Africa",
    "South Sudan", "Sudan", "Tanzania", "Togo", "Tunisia", "Uganda", "Zambia", "Zimbabwe", 
    "Democratic Republic of the Congo", "Côte d'Ivoire", "Democratic Republic of Congo"
]

df = pl.read_csv("./data/conflict-data.csv").rename({
    "Entity": "country",
    "Code": "country_code",
    "Year": "year",
    "Deaths in ongoing conflicts in a country (best estimate) - Conflict type: all": "total_deaths"
}).select(["year", "country", "total_deaths"])

df = df.with_columns([
    pl.col("year").cast(pl.Int64),
    pl.col("total_deaths").cast(pl.Int64)
])

df_2024 = pl.read_csv("./data/acled_aggregated_20024.csv").rename({
    "Country": "country",
    "Fatalities": "total_deaths"
})

df_2024 = df_2024.with_columns([
    pl.lit(2024).alias("year").cast(pl.Int64),
    pl.col("total_deaths").cast(pl.Int64)
]).select(["year", "country", "total_deaths"])

df_combined = df.vstack(df_2024)

df_combined = df_combined.with_columns(
    pl.col("country").str.replace(r"^\s+|\s+$", "") 
)

df_filtered = df_combined.filter(
    (pl.col("year") >= 2001) & (pl.col("year") <= 2024) & (~pl.col("country").is_in(african_countries))
)

deaths_per_year = (
    df_filtered.group_by("year")
    .agg(pl.col("total_deaths").sum().alias("Total Deaths"))
    .sort("year")
)

sns.set_theme(style="whitegrid")

plt.figure(figsize=(11, 7))
plt.plot(deaths_per_year["year"], deaths_per_year["Total Deaths"], marker='o', linestyle='-', color='#8B0000', linewidth=2)  # Dark red color

bush = plt.axvspan(2001, 2008, color='red', alpha=.5, label="Bush/Cheney")
obama = plt.axvspan(2008, 2016, color='blue', alpha=.5, label="Obama/Biden")
trump = plt.axvspan(2016, 2020, color='lightcoral', alpha=0.3, label="Trump/Pence")
biden = plt.axvspan(2020, 2024, color='lightblue', alpha=0.3, label="Biden/Harris")

for x, y in zip(deaths_per_year["year"], deaths_per_year["Total Deaths"]):
    plt.text(x, y + max(deaths_per_year["Total Deaths"]) * 0.02, f"{y:,}", ha="center", va="bottom", fontsize=11, weight='bold')

plt.title("Total Deaths in Armed Conflicts (2001 - October 2024, Excluding Africa)", fontsize=16, weight='bold')
plt.xlabel("Year", fontsize=12)
plt.ylabel("Total Deaths", fontsize=12)

plt.gca().yaxis.set_major_formatter(FuncFormatter(lambda x, _: f"{int(x):,}"))

plt.xticks(deaths_per_year["year"], rotation=45)

plt.grid(True, which='both', linestyle='--', linewidth=0.5, alpha=0.7)

first_legend = plt.legend(handles=[bush, obama, trump, biden], loc="upper left", fontsize=10, title="Presidential Terms")
plt.gca().add_artist(first_legend)

plt.tight_layout()
plt.show()
```


**Data Source:** [Our World in Data - War and Peace](https://ourworldindata.org/war-and-peace)

**Data Source:** [Armed Conflict Location & Event Data Project (ACLED) - Data Export Tool](https://acleddata.com/data-export-tool/)


<div style="display: flex; justify-content: space-between; align-items: stretch;">
  <img src="./images/ukrainian-soldiers.webp" alt="Image 1" style="width: 32%; height: 100%; object-fit: cover;"/>
  <img src="./images/body-bags.jpg" alt="Image 2" style="width: 32%; height: 100%; object-fit: cover;"/>
  <img src="./images/dead.webp" alt="Image 3" style="width: 32%; height: 100%; object-fit: cover;"/>
</div>

<div style="display: flex; justify-content: space-between; align-items: stretch;">
  <img src="./images/israel2.jpg" alt="Image 2" style="width: 32%; height: 100%; object-fit: cover;"/>
  <img src="./images/israel.webp" alt="Image 1" style="width: 32%; height: 100%; object-fit: cover;"/>
  <img src="./images/israel3.jpg" alt="Image 3" style="width: 32%; height: 100%; object-fit: cover;"/>
</div>

::: {.callout-note icon=false collapse="true"}
## **DETAILS**

## **Major Armed Confilcts under Bush/Cheney**
1. **War in Afghanistan (2001)** - Initiated in response to the 9/11 attacks to dismantle al-Qaeda and remove the Taliban.
2. **Iraq War (2003)** - Launched over alleged weapons of mass destruction, resulting in the ousting of Saddam Hussein.

### **TOTAL:** 2

## **Major Armed Confilcts under Obama/Biden**
1. **Libya Intervention (2011)** - U.S. and NATO intervened via airstrikes during the Libyan Civil War, leading to Gaddafi’s ouster and subsequent instability.
2. **Anti-ISIS Campaign (2014)** - Obama launched airstrikes in Iraq and Syria to counter ISIS, leading to a multi-national coalition against the group.
3. **Syria Civil War (Indirect)** - While the U.S. didn’t start the war, Obama’s administration provided significant support to anti-Assad rebels and launched strikes against ISIS in Syria.
4. **Ukraine (2014)** - Following Russia’s annexation of Crimea, the U.S. began providing military aid to Ukraine to support its defense against Russian-backed separatists.

### **TOTAL:** 4

## **Major Armed Confilcts under Trump/Pence**
1. **Continued Anti-ISIS Operations** - Trump intensified operations in Iraq and Syria, focusing on ISIS.

### **TOTAL:** 1

## **Major Armed Confilcts under Biden/Harris**
1. **Afghanistan Withdrawal (2021)** - Led to the Taliban regaining control, with subsequent violence affecting both Afghans and U.S. interests.
2. **Ukraine Conflict (2022)** - Biden’s administration provided extensive military and financial support to Ukraine in response to Russia’s invasion, helping shape the conflict's course.
3. **Israel-Gaza Conflict (2023)** - Amid escalated violence, the Biden administration provided support to Israel, including emergency aid packages and diplomatic backing.

### **TOTAL:** 3

## 🏆 **Winner:** Biden — **Total: 7**

### **Biden has spent nearly 12 years in the White House as either Vice President or President, overseeing more major armed conflicts than any other U.S. leader in the past 24 years.**

![](./images/biden.webp){ width=50% }

:::

# **GAS PRICES**
---

```{python}
#| label: graph2
#| code-summary: "Show Code"

df = pl.read_csv("./data/gasoline_prices.csv").rename({
    "Month": "month",
    "U.S. All Grades All Formulations Retail Gasoline Prices Dollars per Gallon": "avg_gas_price"
})

df = df.with_columns(pl.col("month").str.strptime(pl.Date, "%b %Y"))

df = df.with_columns([
    pl.col("month").dt.year().alias("year"),
    pl.col("month").dt.month().alias("month")
])

df = df.select(["year", "month", "avg_gas_price"])

df_filtered = df.filter((pl.col("year") >= 2001) & (pl.col("year") <= 2024))

df_filtered = df_filtered.select(["year", "month", "avg_gas_price"])

df_yearly_avg = df_filtered.group_by("year").agg(pl.col("avg_gas_price").mean().alias("yearly_avg_price")).sort("year")

df_yearly_avg_pandas = df_yearly_avg.to_pandas()

plt.figure(figsize=(11, 7))
plt.plot(df_yearly_avg_pandas["year"], df_yearly_avg_pandas["yearly_avg_price"], marker='o', linestyle='-', color='#8B0000', linewidth=2)

plt.axvspan(2001, 2008, color='red', alpha=.5, label="Bush/Cheney")
plt.axvspan(2008, 2016, color='blue', alpha=.5, label="Obama/Biden")
plt.axvspan(2016, 2020, color='lightcoral', alpha=0.3, label="Trump/Pence")
plt.axvspan(2020, 2024, color='lightblue', alpha=0.3, label="Biden/Harris")

for x, y in zip(df_yearly_avg_pandas["year"], df_yearly_avg_pandas["yearly_avg_price"]):
    plt.text(x, y + 0.02, f"{y:.2f}", ha="center", va="bottom", fontsize=11, weight='bold')

plt.title("Yearly Average Gasoline Prices (2001 - 2024)\nAll Grades All Formulations Retail Gasoline Prices Dollars per Gallon", fontsize=16, weight='bold')
plt.xlabel("Year", fontsize=12)
plt.ylabel("Average Gasoline Price (Dollars per Gallon)", fontsize=12)

plt.gca().yaxis.set_major_formatter(FuncFormatter(lambda x, _: f"${x:.2f}"))

plt.xticks(df_yearly_avg_pandas["year"], rotation=45)

plt.grid(True, which='both', linestyle='--', linewidth=0.5, alpha=0.7)

first_legend = plt.legend(loc="upper left", fontsize=10, title="Presidential Terms")
plt.gca().add_artist(first_legend)

plt.tight_layout()

plt.show()
```

**Data Source:** [U.S. Energy Information Administration (EIA) - U.S. All Grades All Formulations Retail Gasoline Prices](https://www.eia.gov/dnav/pet/hist/leafhandler.ashx?n=pet&s=emm_epm0_pte_nus_dpg&f=m)

<div style="display: flex; justify-content: space-between; align-items: stretch;">
  <img src="./images/low-gas.webp" alt="Low Gas Prices" style="width: 49%; height: 100%; object-fit: cover;"/>
  <img src="./images/high-gas.webp" alt="High Gas Prices" style="width: 49%; height: 100%; object-fit: cover;"/>
</div>

# **HOME PRICES**
---

```{python}
#| label: graph3
#| code-summary: "Show Code"

df = pl.read_csv("./data/yearly_median_home_prices.csv").rename({
    "DATE": "date",
    "MSPUS": "avg_median_home_price"
})

df = df.with_columns(
    pl.col("date").str.strptime(pl.Date, "%Y-%m-%d").dt.year().alias("year"),
    pl.col("avg_median_home_price").cast(pl.Float64).round()  # Convert to float and round to 2 decimal places
)

df = df.drop("date")

df_filtered = df.filter((pl.col("year") >= 2001) & (pl.col("year") <= 2024))

plt.figure(figsize=(11, 7))
plt.plot(df_filtered["year"], df_filtered["avg_median_home_price"], marker='o', linestyle='-', color='#8B0000', linewidth=2)

# Add shaded regions for each presidency
plt.axvspan(2001, 2008, color='red', alpha=.5, label="Bush/Cheney")
plt.axvspan(2008, 2016, color='blue', alpha=.5, label="Obama/Biden")
plt.axvspan(2016, 2020, color='lightcoral', alpha=0.3, label="Trump/Pence")
plt.axvspan(2020, 2024, color='lightblue', alpha=0.3, label="Biden/Harris")

# Adding data labels above the points
for x, y in zip(df_filtered["year"], df_filtered["avg_median_home_price"]):
    plt.text(x, y + 2000, f"{y:.0f}", ha="center", va="bottom", fontsize=11, weight='bold')

# Titles and labels
plt.title("Annual Average of Quarterly Median Home Prices (2001 - 2024)", fontsize=16, weight='bold')
plt.xlabel("Year", fontsize=12)
plt.ylabel("Average Median Home Price (Dollars)", fontsize=12)

# Format y-axis with dollar sign and no decimal places
plt.gca().yaxis.set_major_formatter(FuncFormatter(lambda x, _: f"${x:,.0f}"))

# Improving the x-axis ticks
plt.xticks(df_filtered["year"], rotation=45)

# Adding a subtle grid
plt.grid(True, which='both', linestyle='--', linewidth=0.5, alpha=0.7)

# Add a legend for presidential terms (upper left)
first_legend = plt.legend(loc="upper left", fontsize=10, title="Presidential Terms")
plt.gca().add_artist(first_legend)

# Adjust layout for better fitting
plt.tight_layout()

# Show plot
plt.show()

```

**Data Source:** [Federal Reserve Economic Data (FRED) - Median Sales Price of Houses Sold for the United States (MSPUS)](https://fred.stlouisfed.org/series/MSPUS)

<div style="display: flex; justify-content: space-between; align-items: stretch;">
  <img src="./images/home.webp" alt="Home" style="width: 49%; height: 100%; object-fit: cover;"/>
  <img src="./images/homeless-camp.jpg" alt="Homeless Camp" style="width: 49%; height: 100%; object-fit: cover;"/>
</div>
